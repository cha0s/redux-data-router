name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch: {}

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm config set registry ${{ vars.NPM_CI_REGISTRY }}
        if: ${{ vars.NPM_CI_REGISTRY }}
      - id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ hashFiles('**/package-lock.json') }}
      - if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: npm ci
      - run: npm run build

  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: ${{ vars.CI_PARALLEL || 256 }}
      matrix:
        node-version: [16.x, 18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ matrix.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - run: npm config set registry ${{ vars.NPM_CI_REGISTRY }}
        if: ${{ vars.NPM_CI_REGISTRY && steps.cache-node-modules.outputs.cache-hit != 'true' }}
      - run: npm ci
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
      - run: npm run test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm config set registry ${{ vars.NPM_CI_REGISTRY }}
        if: ${{ vars.NPM_CI_REGISTRY }}
      - id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ hashFiles('**/package-lock.json') }}
      - if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: npm ci
      - run: npm run lint
